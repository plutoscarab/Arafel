/* Use, for example, at https://www.bottlecaps.de/rr/ui */

Atom ::= Exponent | NAT | STRING | OPERATOR | Lambda | '(' Expr ')' | IDENTIFIER | Cases | IfThen | LetDecl | TypeDecl
Case ::= Pattern ':' Expr
Cases ::= 'case' Expr 'of' (Case)+ ('else' Expr)?
ElseIf ::= 'elif' Expr 'then' Expr
Exponent ::= Expr SUPERSCRIPT
Expr ::= Atom ('(' Expr (',' Expr)* ')')?
IfThen ::= 'if' Expr 'then' Expr (ElseIf)* 'else' Expr
Lambda ::= 'fn' '(' Lexpr ')' '=' Expr
LetDecl ::= 'let' Lexpr '=' Expr Expr
Lexpr ::= LexprName ('(' Lexpr (',' Lexpr)* ')')?
LexprName ::= IDENTIFIER | OPERATOR
MonoType ::= Lexpr (('->' | '→') Lexpr)*
Pattern ::= IDENTIFIER ('(' Pattern (',' Pattern)* ')')? | NAT | STRING | BOOL
PolyType ::= (('forall' | '∀') (IDENTIFIER)+ ',')? MonoType ('|' MonoType)*
TypeDecl ::= 'type' IDENTIFIER ('(' IDENTIFIER (',' IDENTIFIER)* ')')? '=' PolyType Expr
