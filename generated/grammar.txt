/* Use, for example, at https://www.bottlecaps.de/rr/ui */

Postfix ::= SUPERSCRIPT
IfThen ::= 'if' Expr 'then' Expr 'else' Expr
Case ::= Pattern ':' Statement
Cases ::= 'case' Expr 'of' (Case)+ ('else' Statement)?
Pattern ::= ID ('(' Pattern (',' Pattern)* ')')? | NAT | STRING
Lambda ::= '(' Pattern ')' '=' Expr
Atom ::= NAT | STRING | OPERATOR | Lambda | '(' Expr ')' | ID | Cases | IfThen
Expr ::= Atom ('(' Expr (',' Expr)* ')')? (Postfix)*
LetDecl ::= 'let' Lexpr '=' Statement
LexprName ::= ID | OPERATOR
Lexpr ::= LexprName ('(' Lexpr (',' Lexpr)* ')')?
MonoType ::= Lexpr (('->' | '→') Lexpr)*
PolyType ::= (('forall' | '∀') (ID)+ ',')? MonoType ('|' MonoType)*
TypeDecl ::= 'type' ID ('(' ID (',' ID)* ')')? '=' PolyType
Prelude ::= TypeDecl | LetDecl
Statement ::= (Prelude)* Expr
